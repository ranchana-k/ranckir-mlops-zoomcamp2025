version: "3.8"

x-airflow-common:
  &airflow-common
  build:
    context: .
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
    AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    AIRFLOW__CORE__AUTH_MANAGER: airflow.providers.fab.auth_manager.fab_auth_manager.FabAuthManager
  user: "50000:0"
  volumes:
    - ./airflow_db:/opt/airflow
    - ./airflow_db/dags:/opt/airflow/dags 
    - ./airflow_db/logs:/opt/airflow/logs
    - ./airflow_db/config:/opt/airflow/config
    - ./airflow_db/plugins:/opt/airflow/plugins

services:

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        echo "Running Airflow DB migration..."
        # รันคำสั่ง Airflow CLI โดยตรง
        airflow db migrate

        echo "Creating initial Airflow webserver user..."
        # รันคำสั่ง Airflow CLI โดยตรง
        airflow users create \
            --username "${_AIRFLOW_WWW_USER_USERNAME:-airflow}" \
            --password "${_AIRFLOW_WWW_USER_PASSWORD:-airflow}" \
            --firstname Airflow \
            --lastname Admin \
            --role Admin \
            --email admin@example.com || true

        echo "Airflow initialization complete."

    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_MIGRATE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
    user: "0:0"
  airflow-api:
    <<: *airflow-common
    container_name: airflow-api
    ports:
      - "8080:8080"
    command: airflow api-server
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: airflow scheduler
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-dag-processor:
    <<: *airflow-common
    container_name: airflow-dag-processor
    command: airflow dag-processor
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-triggerer:
    <<: *airflow-common
    container_name: airflow-triggerer
    command: airflow triggerer
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  mlflow-ui:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    container_name: mlflow-ui
    working_dir: /app/mlflow
    volumes:
      - ./mlflow:/app/mlflow
    ports:
      - "5000:5000"


